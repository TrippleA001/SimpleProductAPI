package com.myjavainternship.productapi.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import lombok.Data; // Lombok annotation for getters, setters, toString, equals, hashCode
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

import java.math.BigDecimal;

@Entity // Marks this class as a JPA entity (table in the database)
@Table(name = "products") // Specifies the table name
@Data // Lombok: Generates getters, setters, required args constructor, toString, equals/hashCode
@NoArgsConstructor // Lombok: Generates a no-args constructor
@AllArgsConstructor // Lombok: Generates an all-args constructor
public class Product {

    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Auto-generates the ID value
    private Long id;

    @NotBlank(message = "Product name is required and cannot be empty.") // Validation: Not null and must contain at least one non-whitespace character
    @Size(min = 2, max = 100, message = "Product name must be between 2 and 100 characters.")
    @Column(nullable = false, length = 100) // Database constraint: Cannot be null
    private String name;

    @NotNull(message = "Product price is required.") // Validation: Not null
    @DecimalMin(value = "0.01", message = "Price must be greater than 0.") // Validation: Minimum value
    @Digits(integer=8, fraction=2, message = "Price format invalid (e.g., 12345678.99).") // Optional: constraint on number of digits
    @Column(nullable = false, precision = 10, scale = 2) // Database constraint: Cannot be null, precision/scale for decimal
    private BigDecimal price;

    @NotNull(message = "Product quantity is required.") // Validation: Not null
    @Min(value = 1, message = "Quantity must be greater than 0.") // Validation: Minimum value
    @Column(nullable = false) // Database constraint: Cannot be null
    private Integer quantity;

    // Constructors, Getters, and Setters are automatically generated by Lombok's @Data, @NoArgsConstructor, @AllArgsConstructor
    // If not using Lombok, you would need to add them manually.
}